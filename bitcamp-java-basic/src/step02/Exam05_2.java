// 부동소수점 변수 - 단정도와 배정도
package step02;

public class Exam05_2 {
    public static void main(String[] args){
        float f;
        double d;

        // 부동소수점 리터럴 값 뒤에 f나 F를 붙이면,
        // 4바이트 크기의 부동소수점 값을 의미한다.

        // 다음 코드값은 4바이트 크기의 부동소수점을 저장하는 것이다.
        // 변수(메모리)에 값을 넣기 전에
        // 이미 리터럴 값이 4바이트 크기로 넘어가기 때문에 짤린다.
        // 따라서 d 변수에 저장된 값은 짤린 값이다.
        f = 9876.98769876f;
        d = 9876.98769876f;
        
        System.out.println(f);

        //double 메모리에 리터럴 값 넣을 때는
        // 8바이트 부동소수점 리터럴을 넣고, F,f를 붙이지 말아라
        
        d = 9876.98769876;
        System.out.println(d);

        // 주의!
        // 정수의 경우 리터럴을 표현할 때
        // 그 크기를 넘어가면 컴파일 오류가 발생하지만,
        // 부동소수점의 경우 리터럴이 메모리의 크기를 넘어갈 때
        // 컴파일 오류 대신 단지 값이 짤릴 뿐이다.
    }
}

// 결론!
// float 메모리에 값 저장 시,
// 유효자릿수가 7자리 이하인 
// 4바이트 부동소수점을 저장하라.
// double 메모리에 값 저장 시,
// 유효자릿수가 15자리 이하인 8바이트 부동소수점을 저장하라.